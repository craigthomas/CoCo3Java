/*
 * Copyright (C) 2017-2019 Craig Thomas
 * This project uses an MIT style license - see LICENSE for details.
 */
package ca.craigthomas.yacoco3e.components;

import static ca.craigthomas.yacoco3e.datatypes.AddressingMode.*;
import ca.craigthomas.yacoco3e.datatypes.Register;
import ca.craigthomas.yacoco3e.datatypes.UnsignedWord;

public class InstructionTable
{
    private InstructionTable() {}

    private static final Instruction[] INSTRUCTIONS =
        {
            new ByteInstruction(0x00, 6, "NEG", DIRECT, ByteInstruction::negate),
            new NotImplementedInstruction(0x01),
            new NotImplementedInstruction(0x02),
            new ByteInstruction(0x03, 6, "COMM", DIRECT, ByteInstruction::compliment),
            new ByteInstruction(0x04, 6, "LSRM", DIRECT, ByteInstruction::logicalShiftRight),
            new NotImplementedInstruction(0x05),
            new ByteInstruction(0x06, 6, "RORM", DIRECT, ByteInstruction::rotateRight),
            new ByteInstruction(0x07, 6, "ASRM", DIRECT, ByteInstruction::arithmeticShiftRight),
            new ByteInstruction(0x08, 6, "ASLM", DIRECT, ByteInstruction::arithmeticShiftLeft),
            new ByteInstruction(0x09, 6, "ROLM", DIRECT, ByteInstruction::rotateLeft),
            new ByteInstruction(0x0A, 6, "DECM", DIRECT, ByteInstruction::decrement),
            new NotImplementedInstruction(0x0B),
            new ByteInstruction(0x0C, 6, "INCM", DIRECT, ByteInstruction::increment),
            new ByteInstruction(0x0D, 6, "TSTM", DIRECT, ByteInstruction::testByte),
            new VoidInstruction(0x0E, 3, "JMP",  DIRECT, VoidInstruction::unconditionalJump),
            new ByteInstruction(0x0F, 6, "CLRM", DIRECT, ByteInstruction::clear),
            new NotImplementedInstruction(0x10),
            new NotImplementedInstruction(0x11),
            new VoidInstruction(0x12, 2, "NOP",  INHERENT, VoidInstruction::noOperation),
            new VoidInstruction(0x13, 0, "SYNC", INHERENT, VoidInstruction::sync),
            new NotImplementedInstruction(0x14),
            new NotImplementedInstruction(0x15),
            new LongBranchInstruction(0x16, 4, "LBRA", LongBranchInstruction::branchAlways),
            new LongBranchInstruction(0x17, 8, "LBSR", LongBranchInstruction::branchToSubroutine),
            new NotImplementedInstruction(0x18),
            new ByteRegisterInstruction(0x19, 2, "DAA",  INHERENT, ByteRegisterInstruction::decimalAdditionAdjust, Register.A),
            new ByteRegisterInstruction(0x1A, 3, "ORCC", IMMEDIATE, ByteRegisterInstruction::logicalOrCC, Register.CC),
            new NotImplementedInstruction(0x1B),
            new ByteRegisterInstruction(0x1C, 3, "ANDCC", IMMEDIATE, ByteRegisterInstruction::logicalAndCC, Register.CC),
            new ByteRegisterInstruction(0x1D, 2, "SEX",  INHERENT, ByteRegisterInstruction::signExtend, Register.A),
            new VoidInstruction(0x1E, 8, "EXG", IMMEDIATE, VoidInstruction::exchangeRegister),
            new VoidInstruction(0x1F, 6, "TFR", IMMEDIATE, VoidInstruction::transferRegister),
            new BranchInstruction(0x20, 3, "BRA", BranchInstruction::branchAlways),
            new BranchInstruction(0x21, 3, "BRN", BranchInstruction::branchNever),
            new BranchInstruction(0x22, 3, "BHI", BranchInstruction::branchOnHigh),
            new BranchInstruction(0x23, 3, "BLS", BranchInstruction::branchOnLower),
            new BranchInstruction(0x24, 3, "BCC", BranchInstruction::branchOnCarryClear),
            new BranchInstruction(0x25, 3, "BCS", BranchInstruction::branchOnCarrySet),
            new BranchInstruction(0x26, 3, "BNE", BranchInstruction::branchOnNotEqual),
            new BranchInstruction(0x27, 3, "BEQ", BranchInstruction::branchOnEqual),
            new BranchInstruction(0x28, 3, "BVC", BranchInstruction::branchOnOverflowClear),
            new BranchInstruction(0x29, 3, "BVS", BranchInstruction::branchOnOverflowSet),
            new BranchInstruction(0x2A, 3, "BPL", BranchInstruction::branchOnPlus),
            new BranchInstruction(0x2B, 3, "BMI", BranchInstruction::branchOnMinus),
            new BranchInstruction(0x2C, 3, "BGE", BranchInstruction::branchOnGreaterThanEqualZero),
            new BranchInstruction(0x2D, 3, "BLT", BranchInstruction::branchOnLessThanZero),
            new BranchInstruction(0x2E, 3, "BGT", BranchInstruction::branchOnGreaterThanZero),
            new BranchInstruction(0x2F, 3, "BLE", BranchInstruction::branchOnLessThanEqualZero),
            new WordRegisterInstruction(0x30, 2, "LEAX", INDEXED, WordRegisterInstruction::loadEffectiveAddressXY, Register.X),
            new WordRegisterInstruction(0x31, 2, "LEAY", INDEXED, WordRegisterInstruction::loadEffectiveAddressXY, Register.Y),
            new WordRegisterInstruction(0x32, 2, "LEAS", INDEXED, WordRegisterInstruction::loadEffectiveAddressUS, Register.S),
            new WordRegisterInstruction(0x33, 2, "LEAU", INDEXED, WordRegisterInstruction::loadEffectiveAddressUS, Register.U),
            new PushPopInstruction(0x34, 5, "PSHS", PushPopInstruction::pushRegsToStack, Register.S),
            new PushPopInstruction(0x35, 5, "PULS", PushPopInstruction::pullRegsFromStack, Register.S),
            new PushPopInstruction(0x36, 5, "PSHU", PushPopInstruction::pushRegsToStack, Register.U),
            new PushPopInstruction(0x37, 5, "PULU", PushPopInstruction::pullRegsFromStack, Register.U),
            new NotImplementedInstruction(0x38),
            new VoidInstruction(0x39, 5, "RTS", INHERENT, VoidInstruction::returnFromSubroutine),
            new WordRegisterInstruction(0x3A, 3, "ABX",  INHERENT, WordRegisterInstruction::addBtoX, Register.X),
            new VoidInstruction(0x3B, 0,  "RTI", INHERENT, VoidInstruction::returnFromInterrupt),
            new VoidInstruction(0x3C, 20, "CWAI", IMMEDIATE, VoidInstruction::callAndWaitForInterrupt),
            new WordRegisterInstruction(0x3D, 11, "MUL", INHERENT, WordRegisterInstruction::multiply, Register.D),
            new NotImplementedInstruction(0x3E),
            new VoidInstruction(0x3F, 19, "SWI", INHERENT, VoidInstruction::softwareInterrupt),
            new ByteRegisterInstruction(0x40, 2, "NEGA", INHERENT, ByteRegisterInstruction::negate, Register.A),
            new NotImplementedInstruction(0x41),
            new NotImplementedInstruction(0x42),
            new ByteRegisterInstruction(0x43, 2, "COMA", INHERENT, ByteRegisterInstruction::compliment, Register.A),
            new ByteRegisterInstruction(0x44, 2, "LSRA", INHERENT, ByteRegisterInstruction::logicalShiftRight, Register.A),
            new NotImplementedInstruction(0x45),
            new ByteRegisterInstruction(0x46, 2, "RORA", INHERENT, ByteRegisterInstruction::rotateRight, Register.A),
            new ByteRegisterInstruction(0x47, 2, "ASRA", INHERENT, ByteRegisterInstruction::arithmeticShiftRight, Register.A),
            new ByteRegisterInstruction(0x48, 2, "ASLA", INHERENT, ByteRegisterInstruction::arithmeticShiftLeft, Register.A),
            new ByteRegisterInstruction(0x49, 2, "ROLA", INHERENT, ByteRegisterInstruction::rotateLeft, Register.A),
            new ByteRegisterInstruction(0x4A, 2, "DECA", INHERENT, ByteRegisterInstruction::decrement, Register.A),
            new NotImplementedInstruction(0x4B),
            new ByteRegisterInstruction(0x4C, 2, "INCA", INHERENT, ByteRegisterInstruction::increment, Register.A),
            new ByteRegisterInstruction(0x4D, 2, "TSTA", INHERENT, ByteRegisterInstruction::testByte, Register.A),
            new NotImplementedInstruction(0x4E),
            new ByteRegisterInstruction(0x4F, 2, "CLRA", INHERENT, ByteRegisterInstruction::clear, Register.A),
            new ByteRegisterInstruction(0x50, 2, "NEGB", INHERENT, ByteRegisterInstruction::negate, Register.B),
            new NotImplementedInstruction(0x51),
            new NotImplementedInstruction(0x52),
            new ByteRegisterInstruction(0x53, 2, "COMB", INHERENT, ByteRegisterInstruction::compliment, Register.B),
            new ByteRegisterInstruction(0x54, 2, "LSRB", INHERENT, ByteRegisterInstruction::logicalShiftRight, Register.B),
            new NotImplementedInstruction(0x55),
            new ByteRegisterInstruction(0x56, 2, "RORB", INHERENT, ByteRegisterInstruction::rotateRight, Register.B),
            new ByteRegisterInstruction(0x57, 2, "ASRB", INHERENT, ByteRegisterInstruction::arithmeticShiftRight, Register.B),
            new ByteRegisterInstruction(0x58, 2, "ASLB", INHERENT, ByteRegisterInstruction::arithmeticShiftLeft, Register.B),
            new ByteRegisterInstruction(0x59, 2, "ROLB", INHERENT, ByteRegisterInstruction::rotateLeft, Register.B),
            new ByteRegisterInstruction(0x5A, 2, "DECB", INHERENT, ByteRegisterInstruction::decrement, Register.B),
            new NotImplementedInstruction(0x5B),
            new ByteRegisterInstruction(0x5C, 2, "INCB", INHERENT, ByteRegisterInstruction::increment, Register.B),
            new ByteRegisterInstruction(0x5D, 2, "TSTB", INHERENT, ByteRegisterInstruction::testByte, Register.B),
            new NotImplementedInstruction(0x5E),
            new ByteRegisterInstruction(0x5F, 2, "CLRB", INHERENT, ByteRegisterInstruction::clear, Register.B),
            new ByteInstruction(0x60, 4, "NEGM", INDEXED, ByteInstruction::negate),
            new NotImplementedInstruction(0x61),
            new NotImplementedInstruction(0x62),
            new ByteInstruction(0x63, 4, "COMM", INDEXED, ByteInstruction::compliment),
            new ByteInstruction(0x64, 4, "LSRM", INDEXED, ByteInstruction::logicalShiftRight),
            new NotImplementedInstruction(0x65),
            new ByteInstruction(0x66, 4, "RORM", INDEXED, ByteInstruction::rotateRight),
            new ByteInstruction(0x67, 4, "ASRM", INDEXED, ByteInstruction::arithmeticShiftRight),
            new ByteInstruction(0x68, 4, "ASLM", INDEXED, ByteInstruction::arithmeticShiftLeft),
            new ByteInstruction(0x69, 4, "ROLM", INDEXED, ByteInstruction::rotateLeft),
            new ByteInstruction(0x6A, 4, "DECM", INDEXED, ByteInstruction::decrement),
            new NotImplementedInstruction(0x6B),
            new ByteInstruction(0x6C, 4, "INCM", INDEXED, ByteInstruction::increment),
            new ByteInstruction(0x6D, 4, "TSTM", INDEXED, ByteInstruction::testByte),
            new VoidInstruction(0x6E, 3, "JMP",  INDEXED, VoidInstruction::unconditionalJump),
            new ByteInstruction(0x6F, 4, "CLRM", INDEXED, ByteInstruction::clear),
            new ByteInstruction(0x70, 7, "NEGM", EXTENDED, ByteInstruction::negate),
            new NotImplementedInstruction(0x71),
            new NotImplementedInstruction(0x72),
            new ByteInstruction(0x73, 7, "COMM", EXTENDED, ByteInstruction::compliment),
            new ByteInstruction(0x74, 7, "LSRM", EXTENDED, ByteInstruction::logicalShiftRight),
            new NotImplementedInstruction(0x75),
            new ByteInstruction(0x76, 7, "RORM", EXTENDED, ByteInstruction::rotateRight),
            new ByteInstruction(0x77, 7, "ASRM", EXTENDED, ByteInstruction::arithmeticShiftRight),
            new ByteInstruction(0x78, 7, "ASLM", EXTENDED, ByteInstruction::arithmeticShiftLeft),
            new ByteInstruction(0x79, 7, "ROLM", EXTENDED, ByteInstruction::rotateLeft),
            new ByteInstruction(0x7A, 7, "DECM", EXTENDED, ByteInstruction::decrement),
            new NotImplementedInstruction(0x7B),
            new ByteInstruction(0x7C, 7, "INCM", EXTENDED, ByteInstruction::increment),
            new ByteInstruction(0x7D, 7, "TSTM", EXTENDED, ByteInstruction::testByte),
            new VoidInstruction(0x7E, 4, "JMP",  EXTENDED, VoidInstruction::unconditionalJump),
            new ByteInstruction(0x7F, 7, "CLRM", EXTENDED, ByteInstruction::clear),
            new ByteRegisterInstruction(0x80, 2, "SUBA", IMMEDIATE, ByteRegisterInstruction::subtractByte, Register.A),
            new ByteRegisterInstruction(0x81, 2, "CMPA", IMMEDIATE, ByteRegisterInstruction::compareByte, Register.A),
            new ByteRegisterInstruction(0x82, 2, "SBCA", IMMEDIATE, ByteRegisterInstruction::subtractByteWithCarry, Register.A),
            new WordRegisterInstruction(0x83, 4, "SUBD", IMMEDIATE, WordRegisterInstruction::subtractWord, Register.D),
            new ByteRegisterInstruction(0x84, 2, "ANDA", IMMEDIATE, ByteRegisterInstruction::logicalAnd, Register.A),
            new ByteRegisterInstruction(0x85, 2, "BITA", IMMEDIATE, ByteRegisterInstruction::bitTest, Register.A),
            new ByteRegisterInstruction(0x86, 4, "LDA",  IMMEDIATE, ByteRegisterInstruction::loadByteRegister, Register.A),
            new NotImplementedInstruction(0x87),
            new ByteRegisterInstruction(0x88, 2, "EORA", IMMEDIATE, ByteRegisterInstruction::exclusiveOr, Register.A),
            new ByteRegisterInstruction(0x89, 2, "ADCA", IMMEDIATE, ByteRegisterInstruction::addWithCarry, Register.A),
            new ByteRegisterInstruction(0x8A, 2, "ORA",  IMMEDIATE, ByteRegisterInstruction::logicalOr, Register.A),
            new ByteRegisterInstruction(0x8B, 2, "ADDA", IMMEDIATE, ByteRegisterInstruction::addByte, Register.A),
            new WordRegisterInstruction(0x8C, 4, "CMPX", IMMEDIATE, WordRegisterInstruction::compareWord, Register.X),
            new BranchInstruction(0x8D, 7, "BSR", BranchInstruction::branchToSubroutine),
            new WordRegisterInstruction(0x8E, 3, "LDX",  IMMEDIATE, WordRegisterInstruction::loadWordRegister, Register.X),
            new NotImplementedInstruction(0x8F),
            new ByteRegisterInstruction(0x90, 4, "SUBA", DIRECT, ByteRegisterInstruction::subtractByte, Register.A),
            new ByteRegisterInstruction(0x91, 4, "CMPA", DIRECT, ByteRegisterInstruction::compareByte, Register.A),
            new ByteRegisterInstruction(0x92, 4, "SBCA", DIRECT, ByteRegisterInstruction::subtractByteWithCarry, Register.A),
            new WordRegisterInstruction(0x93, 6, "SUBD", DIRECT, WordRegisterInstruction::subtractWord, Register.D),
            new ByteRegisterInstruction(0x94, 4, "ANDA", DIRECT, ByteRegisterInstruction::logicalAnd, Register.A),
            new ByteRegisterInstruction(0x95, 5, "BITA", DIRECT, ByteRegisterInstruction::bitTest, Register.A),
            new ByteRegisterInstruction(0x96, 2, "LDA",  DIRECT, ByteRegisterInstruction::loadByteRegister, Register.A),
            new ByteRegisterInstruction(0x97, 4, "STA",  DIRECT, ByteRegisterInstruction::storeByteRegister, Register.A),
            new ByteRegisterInstruction(0x98, 4, "EORA", DIRECT, ByteRegisterInstruction::exclusiveOr, Register.A),
            new ByteRegisterInstruction(0x99, 4, "ADCA", DIRECT, ByteRegisterInstruction::addWithCarry, Register.A),
            new ByteRegisterInstruction(0x9A, 4, "ORA",  DIRECT, ByteRegisterInstruction::logicalOr, Register.A),
            new ByteRegisterInstruction(0x9B, 4, "ADDA", DIRECT, ByteRegisterInstruction::addByte, Register.A),
            new WordRegisterInstruction(0x9C, 6, "CMPX", DIRECT, WordRegisterInstruction::compareWord, Register.X),
            new VoidInstruction(0x9D, 7, "JSR", DIRECT, VoidInstruction::jumpToSubroutine),
            new WordRegisterInstruction(0x9E, 5, "LDX",  DIRECT, WordRegisterInstruction::loadWordRegister, Register.X),
            new WordRegisterInstruction(0x9F, 5, "STX",  DIRECT, WordRegisterInstruction::storeWordRegister, Register.X),
            new ByteRegisterInstruction(0xA0, 2, "SUBA", INDEXED, ByteRegisterInstruction::subtractByte, Register.A),
            new ByteRegisterInstruction(0xA1, 4, "CMPA", INDEXED, ByteRegisterInstruction::compareByte, Register.A),
            new ByteRegisterInstruction(0xA2, 2, "SBCA", INDEXED, ByteRegisterInstruction::subtractByteWithCarry, Register.A),
            new WordRegisterInstruction(0xA3, 4, "SUBD", INDEXED, WordRegisterInstruction::subtractWord, Register.D),
            new ByteRegisterInstruction(0xA4, 2, "ANDA", INDEXED, ByteRegisterInstruction::logicalAnd, Register.A),
            new ByteRegisterInstruction(0xA5, 5, "BITA", INDEXED, ByteRegisterInstruction::bitTest, Register.A),
            new ByteRegisterInstruction(0xA6, 2, "LDA",  INDEXED, ByteRegisterInstruction::loadByteRegister, Register.A),
            new ByteRegisterInstruction(0xA7, 2, "STA",  INDEXED, ByteRegisterInstruction::storeByteRegister, Register.A),
            new ByteRegisterInstruction(0xA8, 2, "EORA", INDEXED, ByteRegisterInstruction::exclusiveOr, Register.A),
            new ByteRegisterInstruction(0xA9, 2, "ADCA", INDEXED, ByteRegisterInstruction::addWithCarry, Register.A),
            new ByteRegisterInstruction(0xAA, 2, "ORA",  INDEXED, ByteRegisterInstruction::logicalOr, Register.A),
            new ByteRegisterInstruction(0xAB, 2, "ADDA", INDEXED, ByteRegisterInstruction::addByte, Register.A),
            new WordRegisterInstruction(0xAC, 4, "CMPX", INDEXED, WordRegisterInstruction::compareWord, Register.X),
            new VoidInstruction(0xAD, 5, "JSR", INDEXED, VoidInstruction::jumpToSubroutine),
            new WordRegisterInstruction(0xAE, 3, "LDX",  INDEXED, WordRegisterInstruction::loadWordRegister, Register.X),
            new WordRegisterInstruction(0xAF, 3, "STX",  INDEXED, WordRegisterInstruction::storeWordRegister, Register.X),
            new ByteRegisterInstruction(0xB0, 5, "SUBA", EXTENDED, ByteRegisterInstruction::subtractByte, Register.A),
            new ByteRegisterInstruction(0xB1, 5, "CMPA", EXTENDED, ByteRegisterInstruction::compareByte, Register.A),
            new ByteRegisterInstruction(0xB2, 5, "SBCA", EXTENDED, ByteRegisterInstruction::subtractByteWithCarry, Register.A),
            new WordRegisterInstruction(0xB3, 7, "SUBD", EXTENDED, WordRegisterInstruction::subtractWord, Register.D),
            new ByteRegisterInstruction(0xB4, 5, "ANDA", EXTENDED, ByteRegisterInstruction::logicalAnd, Register.A),
            new ByteRegisterInstruction(0xB5, 5, "BITA", EXTENDED, ByteRegisterInstruction::bitTest, Register.A),
            new ByteRegisterInstruction(0xB6, 5, "LDA",  EXTENDED, ByteRegisterInstruction::loadByteRegister, Register.A),
            new ByteRegisterInstruction(0xB7, 5, "STA",  EXTENDED, ByteRegisterInstruction::storeByteRegister, Register.A),
            new ByteRegisterInstruction(0xB8, 5, "EORA", EXTENDED, ByteRegisterInstruction::exclusiveOr, Register.A),
            new ByteRegisterInstruction(0xB9, 5, "ADCA", EXTENDED, ByteRegisterInstruction::addWithCarry, Register.A),
            new ByteRegisterInstruction(0xBA, 5, "ORA",  EXTENDED, ByteRegisterInstruction::logicalOr, Register.A),
            new ByteRegisterInstruction(0xBB, 5, "ADDA", EXTENDED, ByteRegisterInstruction::addByte, Register.A),
            new WordRegisterInstruction(0xBC, 7, "CMPX", EXTENDED, WordRegisterInstruction::compareWord, Register.X),
            new VoidInstruction(0xBD, 8, "JSR", EXTENDED, VoidInstruction::jumpToSubroutine),
            new WordRegisterInstruction(0xBE, 6, "LDX",  EXTENDED, WordRegisterInstruction::loadWordRegister, Register.X),
            new WordRegisterInstruction(0xBF, 6, "STX",  EXTENDED, WordRegisterInstruction::storeWordRegister, Register.X),
            new ByteRegisterInstruction(0xC0, 2, "SUBB", IMMEDIATE, ByteRegisterInstruction::subtractByte, Register.B),
            new ByteRegisterInstruction(0xC1, 2, "CMPB", IMMEDIATE, ByteRegisterInstruction::compareByte, Register.B),
            new ByteRegisterInstruction(0xC2, 2, "SBCB", IMMEDIATE, ByteRegisterInstruction::subtractByteWithCarry, Register.B),
            new WordRegisterInstruction(0xC3, 4, "ADDD", IMMEDIATE, WordRegisterInstruction::addWord, Register.D),
            new ByteRegisterInstruction(0xC4, 2, "ANDB", IMMEDIATE, ByteRegisterInstruction::logicalAnd, Register.B),
            new ByteRegisterInstruction(0xC5, 2, "BITB", IMMEDIATE, ByteRegisterInstruction::bitTest, Register.B),
            new ByteRegisterInstruction(0xC6, 4, "LDB",  IMMEDIATE, ByteRegisterInstruction::loadByteRegister, Register.B),
            new NotImplementedInstruction(0xC7),
            new ByteRegisterInstruction(0xC8, 2, "EORB", IMMEDIATE, ByteRegisterInstruction::exclusiveOr, Register.B),
            new ByteRegisterInstruction(0xC9, 2, "ADCB", IMMEDIATE, ByteRegisterInstruction::addWithCarry, Register.B),
            new ByteRegisterInstruction(0xCA, 2, "ORB",  IMMEDIATE, ByteRegisterInstruction::logicalOr, Register.B),
            new ByteRegisterInstruction(0xCB, 2, "ADDB", IMMEDIATE, ByteRegisterInstruction::addByte, Register.B),
            new WordRegisterInstruction(0xCC, 3, "LDD",  IMMEDIATE, WordRegisterInstruction::loadWordRegister, Register.D),
            new NotImplementedInstruction(0xCD),
            new WordRegisterInstruction(0xCE, 3, "LDU",  IMMEDIATE, WordRegisterInstruction::loadWordRegister, Register.U),
            new NotImplementedInstruction(0xCF),
            new ByteRegisterInstruction(0xD0, 4, "SUBB", DIRECT, ByteRegisterInstruction::subtractByte, Register.B),
            new ByteRegisterInstruction(0xD1, 4, "CMPB", DIRECT, ByteRegisterInstruction::compareByte, Register.B),
            new ByteRegisterInstruction(0xD2, 4, "SBCB", DIRECT, ByteRegisterInstruction::subtractByteWithCarry, Register.B),
            new WordRegisterInstruction(0xD3, 6, "ADDD", DIRECT, WordRegisterInstruction::addWord, Register.D),
            new ByteRegisterInstruction(0xD4, 4, "ANDB", DIRECT, ByteRegisterInstruction::logicalAnd, Register.B),
            new ByteRegisterInstruction(0xD5, 4, "BITB", DIRECT, ByteRegisterInstruction::bitTest, Register.B),
            new ByteRegisterInstruction(0xD6, 2, "LDB",  DIRECT, ByteRegisterInstruction::loadByteRegister, Register.B),
            new ByteRegisterInstruction(0xD7, 2, "STB",  DIRECT, ByteRegisterInstruction::storeByteRegister, Register.B),
            new ByteRegisterInstruction(0xD8, 4, "EORB", DIRECT, ByteRegisterInstruction::exclusiveOr, Register.B),
            new ByteRegisterInstruction(0xD9, 4, "ADCB", DIRECT, ByteRegisterInstruction::addWithCarry, Register.B),
            new ByteRegisterInstruction(0xDA, 4, "ORB",  DIRECT, ByteRegisterInstruction::logicalOr, Register.B),
            new ByteRegisterInstruction(0xDB, 4, "ADDB", DIRECT, ByteRegisterInstruction::addByte, Register.B),
            new WordRegisterInstruction(0xDC, 5, "LDD",  DIRECT, WordRegisterInstruction::loadWordRegister, Register.D),
            new WordRegisterInstruction(0xDD, 5, "STD",  DIRECT, WordRegisterInstruction::storeWordRegister, Register.D),
            new WordRegisterInstruction(0xDE, 5, "LDU",  DIRECT, WordRegisterInstruction::loadWordRegister, Register.U),
            new WordRegisterInstruction(0xDF, 5, "STU",  DIRECT, WordRegisterInstruction::storeWordRegister, Register.U),
            new ByteRegisterInstruction(0xE0, 2, "SUBB", INDEXED, ByteRegisterInstruction::subtractByte, Register.B),
            new ByteRegisterInstruction(0xE1, 2, "CMPB", INDEXED, ByteRegisterInstruction::compareByte, Register.B),
            new ByteRegisterInstruction(0xE2, 2, "SBCB", INDEXED, ByteRegisterInstruction::subtractByteWithCarry, Register.B),
            new WordRegisterInstruction(0xE3, 6, "ADDD", INDEXED, WordRegisterInstruction::addWord, Register.D),
            new ByteRegisterInstruction(0xE4, 2, "ANDB", INDEXED, ByteRegisterInstruction::logicalAnd, Register.B),
            new ByteRegisterInstruction(0xE5, 2, "BITB", INDEXED, ByteRegisterInstruction::bitTest, Register.B),
            new ByteRegisterInstruction(0xE6, 2, "LDB",  INDEXED, ByteRegisterInstruction::loadByteRegister, Register.B),
            new ByteRegisterInstruction(0xE7, 2, "STB",  INDEXED, ByteRegisterInstruction::storeByteRegister, Register.B),
            new ByteRegisterInstruction(0xE8, 2, "EORB", INDEXED, ByteRegisterInstruction::exclusiveOr, Register.B),
            new ByteRegisterInstruction(0xE9, 2, "ADCB", INDEXED, ByteRegisterInstruction::addWithCarry, Register.B),
            new ByteRegisterInstruction(0xEA, 2, "ORB",  INDEXED, ByteRegisterInstruction::logicalOr, Register.B),
            new ByteRegisterInstruction(0xEB, 2, "ADDB", INDEXED, ByteRegisterInstruction::addByte, Register.B),
            new WordRegisterInstruction(0xEC, 3, "LDD",  INDEXED, WordRegisterInstruction::loadWordRegister, Register.D),
            new WordRegisterInstruction(0xED, 3, "STD",  INDEXED, WordRegisterInstruction::storeWordRegister, Register.D),
            new WordRegisterInstruction(0xEE, 3, "LDU",  INDEXED, WordRegisterInstruction::loadWordRegister, Register.U),
            new WordRegisterInstruction(0xEF, 3, "STU",  INDEXED, WordRegisterInstruction::storeWordRegister, Register.U),
            new ByteRegisterInstruction(0xF0, 5, "SUBB", EXTENDED, ByteRegisterInstruction::subtractByte, Register.B),
            new ByteRegisterInstruction(0xF1, 5, "CMPB", EXTENDED, ByteRegisterInstruction::compareByte, Register.B),
            new ByteRegisterInstruction(0xF2, 5, "SBCB", EXTENDED, ByteRegisterInstruction::subtractByteWithCarry, Register.B),
            new WordRegisterInstruction(0xF3, 7, "ADDD", EXTENDED, WordRegisterInstruction::addWord, Register.D),
            new ByteRegisterInstruction(0xF4, 5, "ANDB", EXTENDED, ByteRegisterInstruction::logicalAnd, Register.B),
            new ByteRegisterInstruction(0xF5, 5, "BITB", EXTENDED, ByteRegisterInstruction::bitTest, Register.B),
            new ByteRegisterInstruction(0xF6, 5, "LDB",  EXTENDED, ByteRegisterInstruction::loadByteRegister, Register.B),
            new ByteRegisterInstruction(0xF7, 5, "STB",  EXTENDED, ByteRegisterInstruction::storeByteRegister, Register.B),
            new ByteRegisterInstruction(0xF8, 5, "EORB", EXTENDED, ByteRegisterInstruction::exclusiveOr, Register.B),
            new ByteRegisterInstruction(0xF9, 5, "ADCB", EXTENDED, ByteRegisterInstruction::addWithCarry, Register.B),
            new ByteRegisterInstruction(0xFA, 5, "ORB",  EXTENDED, ByteRegisterInstruction::logicalOr, Register.B),
            new ByteRegisterInstruction(0xFB, 5, "ADDB", EXTENDED, ByteRegisterInstruction::addByte, Register.B),
            new WordRegisterInstruction(0xFC, 6, "LDD",  EXTENDED, WordRegisterInstruction::loadWordRegister, Register.D),
            new WordRegisterInstruction(0xFD, 6, "STD",  EXTENDED, WordRegisterInstruction::storeWordRegister, Register.D),
            new WordRegisterInstruction(0xFE, 6, "LDU",  EXTENDED, WordRegisterInstruction::loadWordRegister, Register.U),
            new WordRegisterInstruction(0xFF, 6, "STU",  EXTENDED, WordRegisterInstruction::storeWordRegister, Register.U),
        };

    private static final Instruction[] EXTENDED_INSTRUCTIONS =
        {
                new NotImplementedInstruction(0x1000),
                new NotImplementedInstruction(0x1001),
                new NotImplementedInstruction(0x1002),
                new NotImplementedInstruction(0x1003),
                new NotImplementedInstruction(0x1004),
                new NotImplementedInstruction(0x1005),
                new NotImplementedInstruction(0x1006),
                new NotImplementedInstruction(0x1007),
                new NotImplementedInstruction(0x1008),
                new NotImplementedInstruction(0x1009),
                new NotImplementedInstruction(0x100A),
                new NotImplementedInstruction(0x100B),
                new NotImplementedInstruction(0x100C),
                new NotImplementedInstruction(0x100D),
                new NotImplementedInstruction(0x100E),
                new NotImplementedInstruction(0x100F),
                new NotImplementedInstruction(0x1010),
                new NotImplementedInstruction(0x1011),
                new NotImplementedInstruction(0x1012),
                new NotImplementedInstruction(0x1013),
                new NotImplementedInstruction(0x1014),
                new NotImplementedInstruction(0x1015),
                new NotImplementedInstruction(0x1016),
                new NotImplementedInstruction(0x1017),
                new NotImplementedInstruction(0x1018),
                new NotImplementedInstruction(0x1019),
                new NotImplementedInstruction(0x101A),
                new NotImplementedInstruction(0x101B),
                new NotImplementedInstruction(0x101C),
                new NotImplementedInstruction(0x101D),
                new NotImplementedInstruction(0x101E),
                new NotImplementedInstruction(0x101F),
                new NotImplementedInstruction(0x1020),
                new LongBranchInstruction(0x1021, 5, "LBRN", LongBranchInstruction::branchNever),
                new LongBranchInstruction(0x1022, 5, "LBHI", LongBranchInstruction::branchOnHigh),
                new LongBranchInstruction(0x1023, 5, "LBLS", LongBranchInstruction::branchOnLower),
                new LongBranchInstruction(0x1024, 5, "LBCC", LongBranchInstruction::branchOnCarryClear),
                new LongBranchInstruction(0x1025, 5, "LBCS", LongBranchInstruction::branchOnCarrySet),
                new LongBranchInstruction(0x1026, 5, "LBNE", LongBranchInstruction::branchOnNotEqual),
                new LongBranchInstruction(0x1027, 5, "LBEQ", LongBranchInstruction::branchOnEqual),
                new LongBranchInstruction(0x1028, 5, "LBVC", LongBranchInstruction::branchOnOverflowClear),
                new LongBranchInstruction(0x1029, 5, "LBVS", LongBranchInstruction::branchOnOverflowSet),
                new LongBranchInstruction(0x102A, 5, "LBPL", LongBranchInstruction::branchOnPlus),
                new LongBranchInstruction(0x102B, 5, "LBMI", LongBranchInstruction::branchOnMinus),
                new LongBranchInstruction(0x102C, 5, "LBGE", LongBranchInstruction::branchOnGreaterThanEqualZero),
                new LongBranchInstruction(0x102D, 5, "LBLT", LongBranchInstruction::branchOnLessThanZero),
                new LongBranchInstruction(0x102E, 5, "LBGT", LongBranchInstruction::branchOnGreaterThanZero),
                new LongBranchInstruction(0x102F, 5, "LBLE", LongBranchInstruction::branchOnLessThanEqualZero),
                new NotImplementedInstruction(0x1030),
                new NotImplementedInstruction(0x1031),
                new NotImplementedInstruction(0x1032),
                new NotImplementedInstruction(0x1033),
                new NotImplementedInstruction(0x1034),
                new NotImplementedInstruction(0x1035),
                new NotImplementedInstruction(0x1036),
                new NotImplementedInstruction(0x1037),
                new NotImplementedInstruction(0x1038),
                new NotImplementedInstruction(0x1039),
                new NotImplementedInstruction(0x103A),
                new NotImplementedInstruction(0x103B),
                new NotImplementedInstruction(0x103C),
                new NotImplementedInstruction(0x103D),
                new NotImplementedInstruction(0x103E),
                new VoidInstruction(0x103F, 19, "SWI3", INHERENT, VoidInstruction::softwareInterrupt3),
                new NotImplementedInstruction(0x1040),
                new NotImplementedInstruction(0x1041),
                new NotImplementedInstruction(0x1042),
                new NotImplementedInstruction(0x1043),
                new NotImplementedInstruction(0x1044),
                new NotImplementedInstruction(0x1045),
                new NotImplementedInstruction(0x1046),
                new NotImplementedInstruction(0x1047),
                new NotImplementedInstruction(0x1048),
                new NotImplementedInstruction(0x1049),
                new NotImplementedInstruction(0x104A),
                new NotImplementedInstruction(0x104B),
                new NotImplementedInstruction(0x104C),
                new NotImplementedInstruction(0x104D),
                new NotImplementedInstruction(0x104E),
                new NotImplementedInstruction(0x104F),
                new NotImplementedInstruction(0x1050),
                new NotImplementedInstruction(0x1051),
                new NotImplementedInstruction(0x1052),
                new NotImplementedInstruction(0x1053),
                new NotImplementedInstruction(0x1054),
                new NotImplementedInstruction(0x1055),
                new NotImplementedInstruction(0x1056),
                new NotImplementedInstruction(0x1057),
                new NotImplementedInstruction(0x1058),
                new NotImplementedInstruction(0x1059),
                new NotImplementedInstruction(0x105A),
                new NotImplementedInstruction(0x105B),
                new NotImplementedInstruction(0x105C),
                new NotImplementedInstruction(0x105D),
                new NotImplementedInstruction(0x105E),
                new NotImplementedInstruction(0x105F),
                new NotImplementedInstruction(0x1060),
                new NotImplementedInstruction(0x1061),
                new NotImplementedInstruction(0x1062),
                new NotImplementedInstruction(0x1063),
                new NotImplementedInstruction(0x1064),
                new NotImplementedInstruction(0x1065),
                new NotImplementedInstruction(0x1066),
                new NotImplementedInstruction(0x1067),
                new NotImplementedInstruction(0x1068),
                new NotImplementedInstruction(0x1069),
                new NotImplementedInstruction(0x106A),
                new NotImplementedInstruction(0x106B),
                new NotImplementedInstruction(0x106C),
                new NotImplementedInstruction(0x106D),
                new NotImplementedInstruction(0x106E),
                new NotImplementedInstruction(0x106F),
                new NotImplementedInstruction(0x1070),
                new NotImplementedInstruction(0x1071),
                new NotImplementedInstruction(0x1072),
                new NotImplementedInstruction(0x1073),
                new NotImplementedInstruction(0x1074),
                new NotImplementedInstruction(0x1075),
                new NotImplementedInstruction(0x1076),
                new NotImplementedInstruction(0x1077),
                new NotImplementedInstruction(0x1078),
                new NotImplementedInstruction(0x1079),
                new NotImplementedInstruction(0x107A),
                new NotImplementedInstruction(0x107B),
                new NotImplementedInstruction(0x107C),
                new NotImplementedInstruction(0x107D),
                new NotImplementedInstruction(0x107E),
                new NotImplementedInstruction(0x107F),
                new NotImplementedInstruction(0x1080),
                new NotImplementedInstruction(0x1081),
                new NotImplementedInstruction(0x1082),
                new WordRegisterInstruction(0x1083, 5, "CMPD", IMMEDIATE, WordRegisterInstruction::compareWord, Register.D),
                new NotImplementedInstruction(0x1084),
                new NotImplementedInstruction(0x1085),
                new NotImplementedInstruction(0x1086),
                new NotImplementedInstruction(0x1087),
                new NotImplementedInstruction(0x1088),
                new NotImplementedInstruction(0x1089),
                new NotImplementedInstruction(0x108A),
                new NotImplementedInstruction(0x108B),
                new WordRegisterInstruction(0x108C, 5, "CMPY", IMMEDIATE, WordRegisterInstruction::compareWord, Register.Y),
                new NotImplementedInstruction(0x108D),
                new WordRegisterInstruction(0x108E, 4, "LDY",  IMMEDIATE, WordRegisterInstruction::loadWordRegister, Register.Y),
                new NotImplementedInstruction(0x108F),
                new NotImplementedInstruction(0x1090),
                new NotImplementedInstruction(0x1091),
                new NotImplementedInstruction(0x1092),
                new WordRegisterInstruction(0x1093, 7, "CMPD", DIRECT, WordRegisterInstruction::compareWord, Register.D),
                new NotImplementedInstruction(0x1094),
                new NotImplementedInstruction(0x1095),
                new NotImplementedInstruction(0x1096),
                new NotImplementedInstruction(0x1097),
                new NotImplementedInstruction(0x1098),
                new NotImplementedInstruction(0x1099),
                new NotImplementedInstruction(0x109A),
                new NotImplementedInstruction(0x109B),
                new WordRegisterInstruction(0x109C, 7, "CMPY", DIRECT, WordRegisterInstruction::compareWord, Register.Y),
                new NotImplementedInstruction(0x109D),
                new WordRegisterInstruction(0x109E, 6, "LDY",  DIRECT, WordRegisterInstruction::loadWordRegister, Register.Y),
                new WordRegisterInstruction(0x109F, 6, "STY",  DIRECT, WordRegisterInstruction::storeWordRegister, Register.Y),
                new NotImplementedInstruction(0x10A0),
                new NotImplementedInstruction(0x10A1),
                new NotImplementedInstruction(0x10A2),
                new WordRegisterInstruction(0x10A3, 5, "CMPD", INDEXED, WordRegisterInstruction::compareWord, Register.D),
                new NotImplementedInstruction(0x10A4),
                new NotImplementedInstruction(0x10A5),
                new NotImplementedInstruction(0x10A6),
                new NotImplementedInstruction(0x10A7),
                new NotImplementedInstruction(0x10A8),
                new NotImplementedInstruction(0x10A9),
                new NotImplementedInstruction(0x10AA),
                new NotImplementedInstruction(0x10AB),
                new WordRegisterInstruction(0x10AC, 5, "CMPY", INDEXED, WordRegisterInstruction::compareWord, Register.Y),
                new NotImplementedInstruction(0x10AD),
                new WordRegisterInstruction(0x10AE, 4, "LDY", INDEXED, WordRegisterInstruction::loadWordRegister, Register.Y),
                new WordRegisterInstruction(0x10AF, 4, "STY", INDEXED, WordRegisterInstruction::storeWordRegister, Register.Y),
                new NotImplementedInstruction(0x10B0),
                new NotImplementedInstruction(0x10B1),
                new NotImplementedInstruction(0x10B2),
                new WordRegisterInstruction(0x10B3, 8, "CMPD", EXTENDED, WordRegisterInstruction::compareWord, Register.D),
                new NotImplementedInstruction(0x10B4),
                new NotImplementedInstruction(0x10B5),
                new NotImplementedInstruction(0x10B6),
                new NotImplementedInstruction(0x10B7),
                new NotImplementedInstruction(0x10B8),
                new NotImplementedInstruction(0x10B9),
                new NotImplementedInstruction(0x10BA),
                new NotImplementedInstruction(0x10BB),
                new WordRegisterInstruction(0x10BC, 8, "CMPY", EXTENDED, WordRegisterInstruction::compareWord, Register.Y),
                new NotImplementedInstruction(0x10BD),
                new WordRegisterInstruction(0x10BE, 7, "LDY", EXTENDED, WordRegisterInstruction::loadWordRegister, Register.Y),
                new WordRegisterInstruction(0x10BF, 7, "STY", EXTENDED, WordRegisterInstruction::storeWordRegister, Register.Y),
                new NotImplementedInstruction(0x10C0),
                new NotImplementedInstruction(0x10C1),
                new NotImplementedInstruction(0x10C2),
                new NotImplementedInstruction(0x10C3),
                new NotImplementedInstruction(0x10C4),
                new NotImplementedInstruction(0x10C5),
                new NotImplementedInstruction(0x10C6),
                new NotImplementedInstruction(0x10C7),
                new NotImplementedInstruction(0x10C8),
                new NotImplementedInstruction(0x10C9),
                new NotImplementedInstruction(0x10CA),
                new NotImplementedInstruction(0x10CB),
                new NotImplementedInstruction(0x10CC),
                new NotImplementedInstruction(0x10CD),
                new WordRegisterInstruction(0x10CE, 4, "LDS", IMMEDIATE, WordRegisterInstruction::loadWordRegister, Register.S),
                new NotImplementedInstruction(0x10CF),
                new NotImplementedInstruction(0x10D0),
                new NotImplementedInstruction(0x10D1),
                new NotImplementedInstruction(0x10D2),
                new NotImplementedInstruction(0x10D3),
                new NotImplementedInstruction(0x10D4),
                new NotImplementedInstruction(0x10D5),
                new NotImplementedInstruction(0x10D6),
                new NotImplementedInstruction(0x10D7),
                new NotImplementedInstruction(0x10D8),
                new NotImplementedInstruction(0x10D9),
                new NotImplementedInstruction(0x10DA),
                new NotImplementedInstruction(0x10DB),
                new NotImplementedInstruction(0x10DC),
                new NotImplementedInstruction(0x10DD),
                new WordRegisterInstruction(0x10DE, 6, "LDS", DIRECT, WordRegisterInstruction::loadWordRegister, Register.S),
                new WordRegisterInstruction(0x10DF, 6, "STS", DIRECT, WordRegisterInstruction::storeWordRegister, Register.S),
                new NotImplementedInstruction(0x10E0),
                new NotImplementedInstruction(0x10E1),
                new NotImplementedInstruction(0x10E2),
                new NotImplementedInstruction(0x10E3),
                new NotImplementedInstruction(0x10E4),
                new NotImplementedInstruction(0x10E5),
                new NotImplementedInstruction(0x10E6),
                new NotImplementedInstruction(0x10E7),
                new NotImplementedInstruction(0x10E8),
                new NotImplementedInstruction(0x10E9),
                new NotImplementedInstruction(0x10EA),
                new NotImplementedInstruction(0x10EB),
                new NotImplementedInstruction(0x10EC),
                new NotImplementedInstruction(0x10ED),
                new WordRegisterInstruction(0x10EE, 4, "LDS", INDEXED, WordRegisterInstruction::loadWordRegister, Register.S),
                new WordRegisterInstruction(0x10EF, 4, "STS", INDEXED, WordRegisterInstruction::storeWordRegister, Register.S),
                new NotImplementedInstruction(0x10F0),
                new NotImplementedInstruction(0x10F1),
                new NotImplementedInstruction(0x10F2),
                new NotImplementedInstruction(0x10F3),
                new NotImplementedInstruction(0x10F4),
                new NotImplementedInstruction(0x10F5),
                new NotImplementedInstruction(0x10F6),
                new NotImplementedInstruction(0x10F7),
                new NotImplementedInstruction(0x10F8),
                new NotImplementedInstruction(0x10F9),
                new NotImplementedInstruction(0x10FA),
                new NotImplementedInstruction(0x10FB),
                new NotImplementedInstruction(0x10FC),
                new NotImplementedInstruction(0x10FD),
                new WordRegisterInstruction(0x10FE, 7, "LDS", EXTENDED, WordRegisterInstruction::loadWordRegister, Register.S),
                new WordRegisterInstruction(0x10FF, 7, "STS", EXTENDED, WordRegisterInstruction::storeWordRegister, Register.S),
        };


    private static final Instruction[] COMPARE_INSTRUCTIONS =
        {
                new NotImplementedInstruction(0x1100),
                new NotImplementedInstruction(0x1101),
                new NotImplementedInstruction(0x1102),
                new NotImplementedInstruction(0x1103),
                new NotImplementedInstruction(0x1104),
                new NotImplementedInstruction(0x1105),
                new NotImplementedInstruction(0x1106),
                new NotImplementedInstruction(0x1107),
                new NotImplementedInstruction(0x1108),
                new NotImplementedInstruction(0x1109),
                new NotImplementedInstruction(0x110A),
                new NotImplementedInstruction(0x110B),
                new NotImplementedInstruction(0x110C),
                new NotImplementedInstruction(0x110D),
                new NotImplementedInstruction(0x110E),
                new NotImplementedInstruction(0x110F),
                new NotImplementedInstruction(0x1110),
                new NotImplementedInstruction(0x1111),
                new NotImplementedInstruction(0x1112),
                new NotImplementedInstruction(0x1113),
                new NotImplementedInstruction(0x1114),
                new NotImplementedInstruction(0x1115),
                new NotImplementedInstruction(0x1116),
                new NotImplementedInstruction(0x1117),
                new NotImplementedInstruction(0x1118),
                new NotImplementedInstruction(0x1119),
                new NotImplementedInstruction(0x111A),
                new NotImplementedInstruction(0x111B),
                new NotImplementedInstruction(0x111C),
                new NotImplementedInstruction(0x111D),
                new NotImplementedInstruction(0x111E),
                new NotImplementedInstruction(0x111F),
                new NotImplementedInstruction(0x1120),
                new NotImplementedInstruction(0x1121),
                new NotImplementedInstruction(0x1122),
                new NotImplementedInstruction(0x1123),
                new NotImplementedInstruction(0x1124),
                new NotImplementedInstruction(0x1125),
                new NotImplementedInstruction(0x1126),
                new NotImplementedInstruction(0x1127),
                new NotImplementedInstruction(0x1128),
                new NotImplementedInstruction(0x1129),
                new NotImplementedInstruction(0x112A),
                new NotImplementedInstruction(0x112B),
                new NotImplementedInstruction(0x112C),
                new NotImplementedInstruction(0x112D),
                new NotImplementedInstruction(0x112E),
                new NotImplementedInstruction(0x112F),
                new NotImplementedInstruction(0x1130),
                new NotImplementedInstruction(0x1131),
                new NotImplementedInstruction(0x1132),
                new NotImplementedInstruction(0x1133),
                new NotImplementedInstruction(0x1134),
                new NotImplementedInstruction(0x1135),
                new NotImplementedInstruction(0x1136),
                new NotImplementedInstruction(0x1137),
                new NotImplementedInstruction(0x1138),
                new NotImplementedInstruction(0x1139),
                new NotImplementedInstruction(0x113A),
                new NotImplementedInstruction(0x113B),
                new NotImplementedInstruction(0x113C),
                new NotImplementedInstruction(0x113D),
                new NotImplementedInstruction(0x113E),
                new VoidInstruction(0x113F, 20, "SWI2", INHERENT, VoidInstruction::softwareInterrupt2),
                new NotImplementedInstruction(0x1140),
                new NotImplementedInstruction(0x1141),
                new NotImplementedInstruction(0x1142),
                new NotImplementedInstruction(0x1143),
                new NotImplementedInstruction(0x1144),
                new NotImplementedInstruction(0x1145),
                new NotImplementedInstruction(0x1146),
                new NotImplementedInstruction(0x1147),
                new NotImplementedInstruction(0x1148),
                new NotImplementedInstruction(0x1149),
                new NotImplementedInstruction(0x114A),
                new NotImplementedInstruction(0x114B),
                new NotImplementedInstruction(0x114C),
                new NotImplementedInstruction(0x114D),
                new NotImplementedInstruction(0x114E),
                new NotImplementedInstruction(0x114F),
                new NotImplementedInstruction(0x1150),
                new NotImplementedInstruction(0x1151),
                new NotImplementedInstruction(0x1152),
                new NotImplementedInstruction(0x1153),
                new NotImplementedInstruction(0x1154),
                new NotImplementedInstruction(0x1155),
                new NotImplementedInstruction(0x1156),
                new NotImplementedInstruction(0x1157),
                new NotImplementedInstruction(0x1158),
                new NotImplementedInstruction(0x1159),
                new NotImplementedInstruction(0x115A),
                new NotImplementedInstruction(0x115B),
                new NotImplementedInstruction(0x115C),
                new NotImplementedInstruction(0x115D),
                new NotImplementedInstruction(0x115E),
                new NotImplementedInstruction(0x115F),
                new NotImplementedInstruction(0x1160),
                new NotImplementedInstruction(0x1161),
                new NotImplementedInstruction(0x1162),
                new NotImplementedInstruction(0x1163),
                new NotImplementedInstruction(0x1164),
                new NotImplementedInstruction(0x1165),
                new NotImplementedInstruction(0x1166),
                new NotImplementedInstruction(0x1167),
                new NotImplementedInstruction(0x1168),
                new NotImplementedInstruction(0x1169),
                new NotImplementedInstruction(0x116A),
                new NotImplementedInstruction(0x116B),
                new NotImplementedInstruction(0x116C),
                new NotImplementedInstruction(0x116D),
                new NotImplementedInstruction(0x116E),
                new NotImplementedInstruction(0x116F),
                new NotImplementedInstruction(0x1170),
                new NotImplementedInstruction(0x1171),
                new NotImplementedInstruction(0x1172),
                new NotImplementedInstruction(0x1173),
                new NotImplementedInstruction(0x1174),
                new NotImplementedInstruction(0x1175),
                new NotImplementedInstruction(0x1176),
                new NotImplementedInstruction(0x1177),
                new NotImplementedInstruction(0x1178),
                new NotImplementedInstruction(0x1179),
                new NotImplementedInstruction(0x117A),
                new NotImplementedInstruction(0x117B),
                new NotImplementedInstruction(0x117C),
                new NotImplementedInstruction(0x117D),
                new NotImplementedInstruction(0x117E),
                new NotImplementedInstruction(0x117F),
                new NotImplementedInstruction(0x1180),
                new NotImplementedInstruction(0x1181),
                new NotImplementedInstruction(0x1182),
                new WordRegisterInstruction(0x1183, 5, "CMPU", IMMEDIATE, WordRegisterInstruction::compareWord, Register.U),
                new NotImplementedInstruction(0x1184),
                new NotImplementedInstruction(0x1185),
                new NotImplementedInstruction(0x1186),
                new NotImplementedInstruction(0x1187),
                new NotImplementedInstruction(0x1188),
                new NotImplementedInstruction(0x1189),
                new NotImplementedInstruction(0x118A),
                new NotImplementedInstruction(0x118B),
                new WordRegisterInstruction(0x118C, 5, "CMPS", IMMEDIATE, WordRegisterInstruction::compareWord, Register.S),
                new NotImplementedInstruction(0x118D),
                new NotImplementedInstruction(0x118E),
                new NotImplementedInstruction(0x118F),
                new NotImplementedInstruction(0x1190),
                new NotImplementedInstruction(0x1191),
                new NotImplementedInstruction(0x1192),
                new WordRegisterInstruction(0x1193, 7, "CMPU", DIRECT, WordRegisterInstruction::compareWord, Register.U),
                new NotImplementedInstruction(0x1194),
                new NotImplementedInstruction(0x1195),
                new NotImplementedInstruction(0x1196),
                new NotImplementedInstruction(0x1197),
                new NotImplementedInstruction(0x1198),
                new NotImplementedInstruction(0x1199),
                new NotImplementedInstruction(0x119A),
                new NotImplementedInstruction(0x119B),
                new WordRegisterInstruction(0x119C, 7, "CMPS", DIRECT, WordRegisterInstruction::compareWord, Register.S),
                new NotImplementedInstruction(0x119D),
                new NotImplementedInstruction(0x119E),
                new NotImplementedInstruction(0x119F),
                new NotImplementedInstruction(0x11A0),
                new NotImplementedInstruction(0x11A1),
                new NotImplementedInstruction(0x11A2),
                new WordRegisterInstruction(0x11A3, 5, "CMPU", INDEXED, WordRegisterInstruction::compareWord, Register.U),
                new NotImplementedInstruction(0x11A4),
                new NotImplementedInstruction(0x11A5),
                new NotImplementedInstruction(0x11A6),
                new NotImplementedInstruction(0x11A7),
                new NotImplementedInstruction(0x11A8),
                new NotImplementedInstruction(0x11A9),
                new NotImplementedInstruction(0x11AA),
                new NotImplementedInstruction(0x11AB),
                new WordRegisterInstruction(0x11AC, 5, "CMPS", INDEXED, WordRegisterInstruction::compareWord, Register.S),
                new NotImplementedInstruction(0x11AD),
                new NotImplementedInstruction(0x11AE),
                new NotImplementedInstruction(0x11AF),
                new NotImplementedInstruction(0x11B0),
                new NotImplementedInstruction(0x11B1),
                new NotImplementedInstruction(0x11B2),
                new WordRegisterInstruction(0x11B3, 8, "CMPU", EXTENDED, WordRegisterInstruction::compareWord, Register.U),
                new NotImplementedInstruction(0x11B4),
                new NotImplementedInstruction(0x11B5),
                new NotImplementedInstruction(0x11B6),
                new NotImplementedInstruction(0x11B7),
                new NotImplementedInstruction(0x11B8),
                new NotImplementedInstruction(0x11B9),
                new NotImplementedInstruction(0x11BA),
                new NotImplementedInstruction(0x11BB),
                new WordRegisterInstruction(0x11BC, 8, "CMPS", EXTENDED, WordRegisterInstruction::compareWord, Register.S),
                new NotImplementedInstruction(0x11BD),
                new NotImplementedInstruction(0x11BE),
                new NotImplementedInstruction(0x11BF),
                new NotImplementedInstruction(0x11C0),
                new NotImplementedInstruction(0x11C1),
                new NotImplementedInstruction(0x11C2),
                new NotImplementedInstruction(0x11C3),
                new NotImplementedInstruction(0x11C4),
                new NotImplementedInstruction(0x11C5),
                new NotImplementedInstruction(0x11C6),
                new NotImplementedInstruction(0x11C7),
                new NotImplementedInstruction(0x11C8),
                new NotImplementedInstruction(0x11C9),
                new NotImplementedInstruction(0x11CA),
                new NotImplementedInstruction(0x11CB),
                new NotImplementedInstruction(0x11CC),
                new NotImplementedInstruction(0x11CD),
                new NotImplementedInstruction(0x11CE),
                new NotImplementedInstruction(0x11CF),
                new NotImplementedInstruction(0x11D0),
                new NotImplementedInstruction(0x11D1),
                new NotImplementedInstruction(0x11D2),
                new NotImplementedInstruction(0x11D3),
                new NotImplementedInstruction(0x11D4),
                new NotImplementedInstruction(0x11D5),
                new NotImplementedInstruction(0x11D6),
                new NotImplementedInstruction(0x11D7),
                new NotImplementedInstruction(0x11D8),
                new NotImplementedInstruction(0x11D9),
                new NotImplementedInstruction(0x11DA),
                new NotImplementedInstruction(0x11DB),
                new NotImplementedInstruction(0x11DC),
                new NotImplementedInstruction(0x11DD),
                new NotImplementedInstruction(0x11DE),
                new NotImplementedInstruction(0x11DF),
                new NotImplementedInstruction(0x11E0),
                new NotImplementedInstruction(0x11E1),
                new NotImplementedInstruction(0x11E2),
                new NotImplementedInstruction(0x11E3),
                new NotImplementedInstruction(0x11E4),
                new NotImplementedInstruction(0x11E5),
                new NotImplementedInstruction(0x11E6),
                new NotImplementedInstruction(0x11E7),
                new NotImplementedInstruction(0x11E8),
                new NotImplementedInstruction(0x11E9),
                new NotImplementedInstruction(0x11EA),
                new NotImplementedInstruction(0x11EB),
                new NotImplementedInstruction(0x11EC),
                new NotImplementedInstruction(0x11ED),
                new NotImplementedInstruction(0x11EE),
                new NotImplementedInstruction(0x11EF),
                new NotImplementedInstruction(0x11F0),
                new NotImplementedInstruction(0x11F1),
                new NotImplementedInstruction(0x11F2),
                new NotImplementedInstruction(0x11F3),
                new NotImplementedInstruction(0x11F4),
                new NotImplementedInstruction(0x11F5),
                new NotImplementedInstruction(0x11F6),
                new NotImplementedInstruction(0x11F7),
                new NotImplementedInstruction(0x11F8),
                new NotImplementedInstruction(0x11F9),
                new NotImplementedInstruction(0x11FA),
                new NotImplementedInstruction(0x11FB),
                new NotImplementedInstruction(0x11FC),
                new NotImplementedInstruction(0x11FD),
                new NotImplementedInstruction(0x11FE),
                new NotImplementedInstruction(0x11FF),
        };

    /**
     * Returns the Opcode object associated with the operand value.
     *
     * @param operand the UnsignedWord value associated with the opcode
     * @return the Opcode object associated with the opcode read
     */
    public static Instruction get(UnsignedWord operand) {
        int value = operand.getInt();

        if ((value & 0xFF00) == 0x1000) {
            return EXTENDED_INSTRUCTIONS[value & 0x00FF];
        }

        if ((value & 0xFF00) == 0x1100) {
            return COMPARE_INSTRUCTIONS[value & 0x00FF];
        }

        return INSTRUCTIONS[(value & 0xFF00) >> 8];
    }
}
